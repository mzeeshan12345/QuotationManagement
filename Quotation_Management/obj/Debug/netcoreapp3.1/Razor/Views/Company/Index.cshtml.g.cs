#pragma checksum "C:\Softwares\Quotation_Management\Quotation_Management\Views\Company\Index.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "cd3253a8a6cb77643afa61afb9751557ed2276d33d31cf29b26840276fe31c9b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Views_Company_Index), @"mvc.1.0.view", @"/Views/Company/Index.cshtml")]
namespace AspNetCoreGeneratedDocument
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using Quotation_Management

#nullable disable
    ;
#nullable restore
#line 2 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using Quotation_Management.Models

#nullable disable
    ;
#nullable restore
#line 4 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using DevExpress.AspNetCore

#nullable disable
    ;
#nullable restore
#line 5 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc

#nullable disable
    ;
    #line default
    #line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"cd3253a8a6cb77643afa61afb9751557ed2276d33d31cf29b26840276fe31c9b", @"/Views/Company/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"e5aa15149a6f814aca9c9febb58b8d5784979381ee3c7539cba075d77e91d2ea", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    internal sealed class Views_Company_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/img/Succcess_Image.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Softwares\Quotation_Management\Quotation_Management\Views\Company\Index.cshtml"
  
    ViewData["Title"] = "Companies";

#line default
#line hidden
#nullable disable

            WriteLiteral(@"
<script>
    var companydata = [];
    var url = """";
    var Pages;
    $(function () {
        getUsers();
        getPages = JSON.parse(localStorage.getItem('Pages'));
        Pages = getPages.find(dx => dx.PageName == ""Company"");
        if (Pages.Create == true) {
            $(""#createCompany"").show();
        }
        else {
            $(""#createCompany"").hide();
        }
    });

    function getUsers() {
        $.get('/Company/GetCompanies', function (data) {
            var companydata = data;
            console.log(companydata)
            Companygrid(companydata);
        });
    }


    function Companygrid(companydata) {

        $(""#gridContainer"").dxDataGrid({
            dataSource: companydata,
            keyExpr: ""CompanyId"",
            showBorders: true,
            columnAutoWidth: true,
            allowColumnResizing: true,
            columnHidingEnabled: true,
            hoverStateEnabled: true,
            paging: {
                pageSiz");
            WriteLiteral(@"e: 10
            },
            editing: {
                mode: 'row',
                allowUpdating(e) {
                    if (Pages.Update == true) {
                        return e;
                    }
                },
                allowDeleting(e) {
                    if (Pages.Delete == true) {
                        return e;
                    }
                }, 
                 useIcons: true
            },
            columnsAutoWidth: true,
            allowColumnReordering: true,
            showBorders: true,
            filterRow: {
                visible: true,
                applyFilter: ""auto""
            },
            searchPanel: {
                visible: true,
                placeholder: ""Search...""
            },
            export: {
                enabled: true,
            },
            onExporting: function (e) {
                console.log(e, ""e"");
                e.fileName = ""Company List""
            },
            headerFi");
            WriteLiteral(@"lter: {
                visible: true
            },
            columns: [
                {
                    dataField: ""FilePath"",
                    caption: ""Logo"",
                     width: ""90"",
                    allowFiltering: false,
                    allowSorting: false,
                    cellTemplate: function (container, options) {

                        $(""<div style='height: 55px;'>"")
                            .appendTo(container)
                            .append($(""<img>"", { ""src"": url + ""/"" + options.value, ""style"": ""display: block;width:100%; height: 100%;object-fit: contain;"" }))

                    }
                },
                {
                    dataField: ""CompanyId"",
                    allowEditing: false,
                    width: 70
                },
                {
                    dataField: ""CompanyName"",
                    caption: ""Name"",
                },
                {
                    dataField: ""Email"", ");
            WriteLiteral(@"
                },
                //{
                //    dataField: ""Phone"" 
                //},
                {
                    dataField: ""Address"", 
                },   
                {
                    dataField: ""Status"",
                    caption: ""Status"",
                    dataType: ""boolean"" 
                }
            ],

            summary: {
                totalItems: [{
                    column: 'CompanyId',
                    summaryType: 'count',
                }]
            },

            onEditingStart: function (e) {
                var cmp = e.data.CompanyId;
                console.log(cmp, ""cmpiD"");
                top.location.href = '/Company/UpdateCompany?id=' + cmp;
            },
            onRowRemoved: function (e) {
                console.log(e);
                var key = e.data.CompanyId;
                $.post('/Company/DeleteCompany?key=' + key, function (data) {
                    if (data) {
                 ");
            WriteLiteral(@"       toastr.error('Deleted Successfully');
                    }
                });
            },

            //onToolbarPreparing: function (e)
            //{
            //    var dataGrid = e.component;
            //    e.toolbarOptions.items.unshift({
            //        location: ""after"",
            //        widget: ""dxButton"",
            //        visible: function (e) {
            //            console.log(e, 'e');
            //            if (Pages && Pages.Create == true) {
            //                return e;
            //            }
            //            else {
            //                return e.column.visible = false;
            //            }
            //        },
            //        options: {
            //            icon: ""add"",
            //            //stylingMode: 'outlined',
            //            type: 'default',
            //            text: 'Add New Company', 
            //            onClick: function () {
          ");
            WriteLiteral(@"  //                top.location.href = '/Company/AddCompany';
            //            }
            //        }
            //    });
            //},   


        });
    }
</script>

<style>
    .sb-nav-fixed #layoutSidenav #layoutSidenav_content {
        top: 23px;
    }
</style>


<div class=""row"">
<div class=""col-12"">
    <div class=""card"">

        <div class=""card-header"">
            <h3 style=""display: inline-block;"">Company</h3>
            <button type=""button"" onclick=""location.href='/Company/AddCompany'"" id=""createCompany"" class=""btn btn-info btn-fw float-right"">Add New Company</button>
        </div>

        <div class=""card-body"">
");
            WriteLiteral(@"
            <div id=""gridContainer""></div>
        </div>
    </div>
</div>
</div>


<div class=""row"">
    <div class=""modal fade"" id=""ignismyModal"" role=""dialog"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal""");
            BeginWriteAttribute("aria-label", " aria-label=\"", 6279, "\"", 6292, 0);
            EndWriteAttribute();
            WriteLiteral("><span>×</span></button>\r\n                </div>\r\n\r\n                <div class=\"modal-body\">\r\n                    <div class=\"thank-you-pop\">\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "cd3253a8a6cb77643afa61afb9751557ed2276d33d31cf29b26840276fe31c9b11762", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        <h1>Successfully Updated!</h1>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n ");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
