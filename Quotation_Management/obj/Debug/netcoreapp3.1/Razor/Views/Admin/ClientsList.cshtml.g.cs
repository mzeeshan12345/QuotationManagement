#pragma checksum "C:\Softwares\Quotation_Management\Quotation_Management\Views\Admin\ClientsList.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "911df925edd9230c137ff746e9b26cfc0680ac73a897e608c8f4828ff3657730"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Views_Admin_ClientsList), @"mvc.1.0.view", @"/Views/Admin/ClientsList.cshtml")]
namespace AspNetCoreGeneratedDocument
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using Quotation_Management

#nullable disable
    ;
#nullable restore
#line 2 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using Quotation_Management.Models

#nullable disable
    ;
#nullable restore
#line 4 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using DevExpress.AspNetCore

#nullable disable
    ;
#nullable restore
#line 5 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc

#nullable disable
    ;
    #line default
    #line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"911df925edd9230c137ff746e9b26cfc0680ac73a897e608c8f4828ff3657730", @"/Views/Admin/ClientsList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"e5aa15149a6f814aca9c9febb58b8d5784979381ee3c7539cba075d77e91d2ea", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    internal sealed class Views_Admin_ClientsList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Softwares\Quotation_Management\Quotation_Management\Views\Admin\ClientsList.cshtml"
  
    ViewData["Title"] = "Sub Clients";

#line default
#line hidden
#nullable disable

            WriteLiteral(@"
<script>
    var companies;
    var subclientsdata;
    var clients;
    var CompanyID;

    $(function () {
        var getPages = JSON.parse(localStorage.getItem('Pages'));
        Pages = getPages.find(dx => dx.PageName == ""Sub Clients"");

        CompanyID = localStorage.getItem('CompanyId');
        console.log(CompanyID, ""cmpId"");
        getsubClients(CompanyID);
    });

    function getsubClients(CompanyID) {
        $.get('/Admin/GetAllSubClients?iD=' + CompanyID, function (data) {
            subclientsdata = data;
            console.log(subclientsdata)
            SubClientsgrid(subclientsdata);
        });
    }


    function SubClientsgrid(subclientsdata) {
        $.get('/Company/GetActiveCompanies', function (data) {
            companies = data;

            $.get('/Admin/GetAllClients', function (data) {
                clients = data;

            $(""#gridContainer"").dxDataGrid({
                dataSource: subclientsdata,
                keyExpr: ""SubCl");
            WriteLiteral(@"ientId"",
                showBorders: true,
                columnAutoWidth: true,
                allowColumnResizing: true,
                columnHidingEnabled: true,
                hoverStateEnabled: true,
                paging: {
                    pageSize: 10
                },
                editing: {
                    mode: 'cell',
                    allowAdding: true,
                    allowUpdating: true,
                    useIcons: true
                },
                columnsAutoWidth: true,
                showBorders: true,
                filterRow: {
                    visible: true,
                    applyFilter: ""auto""
                },
                searchPanel: {
                    visible: true,
                    placeholder: ""Search...""
                },
                export: {
                    enabled: true,
                },
                onExporting: function (e) {
                    console.log(e, ""e"");
                  ");
            WriteLiteral(@"  e.fileName = ""Clients List""
                },
                headerFilter: {
                    visible: true
                },
                columns: [ 
                    //{
                    //    dataField: 'CompanyId',
                    //    caption: 'Company',
                    //    validationRules: [{ type: 'required' }],
                    //    lookup: {
                    //        dataSource: companies,
                    //        displayExpr: 'CompanyName',
                    //        valueExpr: 'CompanyId',
                    //    },
                    //},
                    {
                        dataField: 'ClientId',
                        caption: 'Client',
                        validationRules: [{ type: 'required' }],
                        lookup: {
                            dataSource: clients,
                            displayExpr: 'ClientName',
                            valueExpr: 'ClientId',
                        },
  ");
            WriteLiteral(@"                  },
                    {
                        dataField: ""ClientName"",
                        validationRules: [{ type: 'required' }],
                    },
                    {
                        dataField: ""CreatedAt"",
                        visible: false
                     },
                    {
                        dataField: ""Email"",
                        validationRules: [{ type: 'required', message: 'Email is required' },
                        { type: 'email', message: 'Email is invalid' }]
                    },  {
                        dataField: ""Reference""
                      },
                    {
                        dataField: ""Phone""
                    },
                    {
                        dataField: ""Landline""
                    },
                    {
                        dataField: ""Whatsapp""
                    }],

                toolbar: {
                    items: [
                        {");
            WriteLiteral(@"
                            name: 'addRowButton',
                            showText: 'always',
                            options: {
                                text: 'Add New Sub-Client',
                                type: 'default',
                            },
                        },

                    ],
                },

                onRowInserted: function (e) {
                    var model = e.data;
                    model.CompanyId = CompanyID;
                    $.post('/Admin/AddSubClient', { model, model }, function (data) {
                        console.log(data);
                        if (data) {
                            toastr.success('Add Successfully');
                            getsubClients();
                        }
                    });
                },
                onRowUpdated: function (e) {
                    var model = e.data;
                    console.log(model, ""modEl"");
                    $.post('/Admin/Up");
            WriteLiteral(@"dateSubClient', { model, model }, function (data) {
                        console.log(data);
                        if (data) {
                            toastr.success('Update Successfully');
                            getsubClients();

                        }
                    });
                },
            });
        });
      });
 }
</script>


<div class=""row"">
    <div class=""col-12"">
        <div class=""card"">
            <div class=""card-body"">
                <h4 class=""card-title""> Sub-Clients</h4>

                <div id=""gridContainer""></div>
            </div>
        </div>
    </div>
</div>

");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
