#pragma checksum "C:\Softwares\Quotation_Management\Quotation_Management\Views\Admin\AssignClient.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "783c168cd5a2f6b1e25c9cd8b43eb7aa6d3add85038f11b54330d5a6c5981adc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Views_Admin_AssignClient), @"mvc.1.0.view", @"/Views/Admin/AssignClient.cshtml")]
namespace AspNetCoreGeneratedDocument
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using Quotation_Management

#nullable disable
    ;
#nullable restore
#line 2 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using Quotation_Management.Models

#nullable disable
    ;
#nullable restore
#line 4 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using DevExpress.AspNetCore

#nullable disable
    ;
#nullable restore
#line 5 "C:\Softwares\Quotation_Management\Quotation_Management\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc

#nullable disable
    ;
    #line default
    #line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"783c168cd5a2f6b1e25c9cd8b43eb7aa6d3add85038f11b54330d5a6c5981adc", @"/Views/Admin/AssignClient.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"e5aa15149a6f814aca9c9febb58b8d5784979381ee3c7539cba075d77e91d2ea", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    internal sealed class Views_Admin_AssignClient : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Softwares\Quotation_Management\Quotation_Management\Views\Admin\AssignClient.cshtml"
  
    var useRs = (IEnumerable<SelectListItem>)ViewData["Users"];
    var cliEnts = (IEnumerable<SelectListItem>)ViewData["Clients"];


#line default
#line hidden
#nullable disable

            WriteLiteral(@"<script>

        var simpleProducts = [];
        var simpleProducts1 = [];
        var arrayPages = [];
        var input;
    var inputUser;


    $(function () {
        var getPages = JSON.parse(localStorage.getItem('Pages'));
        Pages = getPages.find(dx => dx.PageName == ""Assign Client""); 
        if (Pages.Create == true) {
            $(""#showBtn"").show();
        }
        else {
            $(""#showBtn"").hide();
        }

        });

    function GetUserId(useRs) {

        inputUser = $(useRs).val();
");
            WriteLiteral("    }\r\n\r\n    function GetSubClients(cliEnts) {\r\n            $(\"#showBtn\").css(\"visibility\", \"visible\");\r\n        input = $(cliEnts).val();\r\n        //$.get(\'");
            WriteLiteral("@Url.Action(\"GetSubClientsByMain\", \"Admin\")\', { clientID: input, id: inputUser }, function (data) {\r\n        $.get(\'");
            Write(
#nullable restore
#line 42 "C:\Softwares\Quotation_Management\Quotation_Management\Views\Admin\AssignClient.cshtml"
                Url.Action("GetSubClientsByMain", "Admin")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@"', { clientID: input}, function (data) {
                simpleProducts = data; 
                console.log(simpleProducts, ""sCliEntS"");
                SubClientgrid(simpleProducts);
            });
    }


    function AssignedSubClientgrid(simpleProducts1) {

        const dataGrid = $.get('");
            Write(
#nullable restore
#line 52 "C:\Softwares\Quotation_Management\Quotation_Management\Views\Admin\AssignClient.cshtml"
                                 Url.Action("GetAllClients", "Admin")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@"', function (data) {
                var clienT = data;

            $(""#gridContainer1"").dxDataGrid({
                dataSource: simpleProducts1,
                 showBorders: true,
                columnAutoWidth: true,
                allowColumnResizing: true,
                columnHidingEnabled: true,
                paging: {
                    pageSize: 12
                },
                editing: {
                    mode: 'cell',
                    allowUpdating: true,
                    allowDeleting: false,
                    useIcons: true
                },
                columnsAutoWidth: true,
                showBorders: true,
                filterRow: {
                    visible: true,
                    applyFilter: ""auto""
                },
                searchPanel: {
                    visible: true,
                    placeholder: ""Search...""
                },
                headerFilter: {
                    visible: true
               ");
            WriteLiteral(@" },
                columns: [
                    {
                        dataField: 'ClientId',
                        caption: 'Client',
                        editorOptions: {
                            showClearButton: true
                        },
                        lookup: {
                            dataSource: clienT,
                            displayExpr: 'ClientName',
                            valueExpr: 'ClientId',
                        },
                    },
                    {
                        dataField: ""SubClientId"",
                        visible: false
                    },
                    {
                        dataField: ""ClientName"",
                        caption: ""Sub Client"",
                        allowEditing: false
                    },
                    {
                        dataField: ""Name"",
                        visible: false
                    },
                    {
                        dataF");
            WriteLiteral(@"ield: ""UserId"",
                        visible: false
                    },
                    {
                        dataField: ""Email"",
                        allowEditing: false,
                        visible: false
                    },
                    {
                        dataField: ""CompanyId"",
                        visible: false
                    },
                    {
                        dataField: ""CreatedAt"",
                        visible: false
                    },  {
                        dataField: ""Reference"",
                        visible: false
                    },
                    {
                        dataField: ""Phone"",
                        visible: false
                    },
                    {
                        dataField: ""Landline"",
                        visible: false
                    },
                    {
                        dataField: ""Whatsapp"",
                        visible: false");
            WriteLiteral(@"
                    },
                    {
                        dataField: ""Assign"",
                        dataType: ""boolean""
                    }],

            });
         });
    }


    function SubClientgrid(simpleProducts) {

            $(""#gridContainer"").dxDataGrid({
                dataSource: simpleProducts,
                keyExpr: ""SubClientId"",
                showBorders: true,
                columnAutoWidth: true,
                allowColumnResizing: true,
                columnHidingEnabled: true,
                paging: {
                    pageSize: 12
                },
                editing: {
                    mode: 'cell',
                    allowUpdating: true,
                    allowDeleting: false,
                    useIcons: true
                },
                columnsAutoWidth: true,
                showBorders: true,
                filterRow: {
                    visible: true,
                    applyFilter: ""auto""
   ");
            WriteLiteral(@"             },
                searchPanel: {
                    visible: true,
                    placeholder: ""Search...""
                },
                headerFilter: {
                    visible: true
                },
                columns: [
                    {
                        dataField: ""SubClientId"",
                        allowEditing: false
                    },
                    {
                        dataField: ""SubClientName"",
                        caption: ""SubClient"",
                        allowEditing: false
                    }, 
                    {
                        dataField: 'UserId',
                        visible: false
                    },
                    {
                        dataField: ""Email"", 
                        visible: false
                    },
                    {
                        dataField: ""Assign"",
                        dataType: ""boolean""
                    },
                 ");
            WriteLiteral(@"   {
                        dataField: 'CompanyId',
                        visible: false
                    },
                    {
                        dataField: 'ClientId',
                        visible: false
                    },
                    //{
                    //    dataField: ""SubClientName"",
                    //    visible: false
                    //},
                    {
                        dataField: ""CreatedAt"",
                        visible: false
                    },  {
                        dataField: ""Reference"",
                        visible: false
                    },
                    {
                        dataField: ""Phone"",
                        visible: false
                    },
                    {
                        dataField: ""Landline"",
                        visible: false
                    },
                    {
                        dataField: ""Whatsapp"",
                        visible:");
            WriteLiteral(@" false
                    }

                ]
            });
        }


        function onSubmit(model) {  
            model.forEach(function (element) {
                if (element.Assign == true) {
                    element.UserId = inputUser,
                        element.ClientId = input
                }
                else {
                    element.UserId = null,
                        element.ClientId = input
                }
            });
             
            $.post('/Admin/AddClientPermission', {permission: model }, function (data) {
                console.log(data, ""Data Return"");

                if (data) {
                    toastr.success('Add Successfully');
                setTimeout(function () {
                $.get('");
            Write(
#nullable restore
#line 259 "C:\Softwares\Quotation_Management\Quotation_Management\Views\Admin\AssignClient.cshtml"
                        Url.Action("GetSubClientsByMain", "Admin")

#line default
#line hidden
#nullable disable
            );
            WriteLiteral(@"', { clientID: input, id: inputUser }, function (data) {
                var dataGrid = $(""#gridContainer"").dxDataGrid(""instance"");
                dataGrid.option('dataSource', data);
                }); 
                    }.bind(this), 3000);
                }
            });
    }

     

");
            WriteLiteral(@"
</script>
<div class=""card shadow mb-4"">
    <!-- Card Header - Accordion -->
    <div class=""card-header py-3 d-flex flex-row align-items-center justify-content-between"">
        <h6 class=""m-0 font-weight-bold text-primary"">Assign Permission</h6>
    </div>
    <!-- Card Content - Collapse -->
    <div class=""collapse show"" id=""collapseCardExample""");
            BeginWriteAttribute("style", " style=\"", 10219, "\"", 10227, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n        <div class=\"card-body\">\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"status\">User</label>\r\n                    ");
            Write(
#nullable restore
#line 310 "C:\Softwares\Quotation_Management\Quotation_Management\Views\Admin\AssignClient.cshtml"
                     Html.DropDownList("Id", useRs, "Select User", new { @class = "form-control", @name = "Name", @id = "Id", @onchange = "GetUserId(this)" })

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\r\n                </div>\r\n                \r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"status\">Client</label>\r\n                    ");
            Write(
#nullable restore
#line 315 "C:\Softwares\Quotation_Management\Quotation_Management\Views\Admin\AssignClient.cshtml"
                     Html.DropDownList("ClientId", cliEnts, "Select Client", new { @class = "form-control", @name = "ClientName", @id = "ClientId", @onchange = "GetSubClients(this)" })

#line default
#line hidden
#nullable disable
            );
            WriteLiteral("\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-row\">\r\n");
            WriteLiteral(@"                
                <div class=""form-group col-md-12"">

                    <div id=""gridContainer""></div>
                    <br />

                    <div class=""form-row"">
                        <div class=""form-group col-md-4""></div>
                        <div class=""form-group col-md-4"">
                            <button class=""btn btn-gradient-info mr-2"" id=""showBtn"" type=""button"" style=""visibility: hidden;"" onclick=""onSubmit(simpleProducts)"">Assign </button>
                        </div>
                        <div class=""form-group col-md-4""></div>
                    </div>
                </div>
            </div>

");
            WriteLiteral("        </div>\r\n    </div>\r\n</div>\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
