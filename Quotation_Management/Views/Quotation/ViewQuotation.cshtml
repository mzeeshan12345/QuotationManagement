@{
    var custoMers = (IEnumerable<SelectListItem>)ViewData["Customers"];
}

<script>
    var quotdata = [];
    var Status = [];
    var quotes;
    var compBank;
    var comp;
    var tc;
    var url = "";
    var termsdata;
    var cv = "";
    var QId;
    var fcx ;
    var date;
    var existRole;
    var isSuperAdmin;
    var isManager;
    var approvaL = ['Pending', 'Approved','Reject'];
    var quotationStatus = ['Proposal', 'Quotation Status', 'Waiting PO', 'PO Received', 'Invoiced', 'Canceled'];
    var statusApproval = ['Pending', 'Approved', 'Reject'];



    var authPages1;
    var roles1;
    var permission;
    var menu1;
    var count1 = 0;
    var z = 0;

    $(function () {
        getCompAny();
        var url_string = top.location.href
        var url = new URL(url_string);
        QId = url.searchParams.get('id');
        getQuotById(QId);
        var today = new Date();
        date = formatDate(new Date(today));
        $('#DatE').html(date);
 

        $("#html-editor").dxHtmlEditor({
            height: 370,
            toolbar: {
                items: [
                    "undo", "redo", "separator",
                    {
                        name: "size",
                        acceptedValues: ["8pt", "10pt", "12pt", "14pt", "18pt", "24pt", "36pt"]
                    },
                    {
                        name: "font",
                        acceptedValues: ["Arial", "Courier New", "Georgia", "Impact", "Lucida Console", "Tahoma", "Times New Roman", "Verdana"]
                    },
                    "separator", "bold", "italic", "strike", "underline", "separator",
                    "alignLeft", "alignCenter", "alignRight", "alignJustify", "separator",
                    {
                        name: "header",
                        acceptedValues: [false, 1, 2, 3, 4, 5]
                    }, "separator",
                    "orderedList", "bulletList", "separator",
                    "color", "background", "separator",
                    "clear", "codeBlock", "blockquote"
                ]
            },
            mediaResizing: {
                enabled: true
            },
            export: {
                enabled: true,
                printingEnabled: false
            },

        });

        GetSubitem();
     });


    function GetSubitem() { 
        $.get('/Quotation/GetItems', function (data) {
            fcx = data; 
        });
    }

    function formatDate(date) {
        var day = date.getDate();
        var month = date.getMonth() + 1;
        var year = date.getFullYear();

        var formatted = (day < 10 ? "0" : "") + day + "-" + (month < 10 ? "0" : "") + month + "-" + year;
        return formatted;
    }

            function getQuotById() {
             $.get('/Quotation/GetQuotation?quoteID=' + QId, function (data) {

            termsdata = data;
                  $(".dx-htmleditor-content").html(termsdata.TermsConditions);
                 $('#ReferenceNo').html(termsdata.ClientReference);
                 $('#Discount').val(termsdata.Discount);

                 $('#Description').val(termsdata.Description);
                 $('#Text').val(termsdata.Text); 
                 console.log(termsdata, "termsData");

                 $('#QStatus').dxSelectBox({
                     items: quotationStatus,
                     value: termsdata.QuotationStatus,
                     name: "QuotationStatus",
                     readOnly: true,
                     searchEnabled: true,
                     showClearButton: true, 
                 });

                //****Get Current User with roles*****
                 $.get('@Url.Action("CurrentUserList", "Admin")', function (data) {
                     roles1 = data;
                      console.log(roles1.result, "result cccc roLes");

                      // **** Get All Assigned Pages By Role ***
                     $.post('@Url.Action("GetMethodPermission", "Admin")', { role: roles1.result }, function (data) {
                         menu1 = data;
                         console.log(menu1, "menu1");

                           if (menu1.length > 0) {
                             for (var i = 0; i < menu1.length; i++) {
                                  count1++

                                 if (menu1[i].PageName == "Approval Method")
                                 {
                                     if (menu1[i].Read == true) {
                                          $('#Status').dxSelectBox({
                                             items: approvaL,
                                             value: termsdata.Status,
                                             name: "Status",
                                              searchEnabled: true,
                                              readOnly: true,
                                             showClearButton: true
                                         });
                                     }
                                     else {
                                          $('#Status').dxSelectBox({
                                             items: approvaL,
                                             value: termsdata.Status,
                                             name: "Status",
                                             readOnly: true,
                                             searchEnabled: true,
                                             showClearButton: true
                                         });
                                     }

                                 } 
                                  
                             }
                           }
                     });
                     console.log(roles1.result, "roles1.result");
              existRole = roles1.result;
            $.post('@Url.Action("GetFlowPermission", "Admin")', { role: existRole }, function (data) {
                 permission = data;
                console.log(permission, "permission");

                //Check for approved permission
                 isManager = roles1.result.filter(dx => dx.RoleName == 'Manager');
                 isSuperAdmin = roles1.result.filter(dx => dx.RoleName == 'SuperAdmin');
          
                if (permission.length > 0) {
                    for (var w = 0; w < permission.length; w++) {
                        z++;
                        if (permission[w].PageName == termsdata.QuotationStatus &&
                            permission[w].Read == true && isManager || isManager.length > 0) {

                            $('#checked').dxSelectBox({
                                items: statusApproval,
                                value: termsdata.Manager,
                                name: "Manager",
                                searchEnabled: true,
                                readOnly: true,
                                showClearButton: true,
                                onValueChanged(data) {
                                    if (data.value == "Reject") {
                                        $('#ReasonBox').show();
                                    } else {
                                        $('#ReasonBox').hide();
                                    }
                                }
                            });
                        }
                        else {

                            $('#checked').dxSelectBox({
                                items: statusApproval,
                                value: termsdata.Manager,
                                name: "Manager",
                                readOnly: true,
                                searchEnabled: true,
                                showClearButton: true
                            });

                        }
                    }
                }
                 
                if (permission.length > 0) {
                    for (var r = 0; r < permission.length; r++) {
                        z++;

                        if (permission[r].PageName == termsdata.QuotationStatus &&
                            permission[r].Read == true && isSuperAdmin || isSuperAdmin.length > 0) {

                            $('#checkedAdmin').dxSelectBox({
                                items: statusApproval,
                                value: termsdata.Admin,
                                name: "Admin",
                                readOnly: true,
                                searchEnabled: true,
                                showClearButton: true,
                                onValueChanged(data) {
                                    if (data.value == "Reject") {

                                        $('#ReasonBox').show();
                                    } else {
                                        $('#ReasonBox').hide();
                                    }
                                }
                            });

                            //}
                        }
                        else {

                            $('#checkedAdmin').dxSelectBox({
                                items: statusApproval,
                                value: termsdata.Admin,
                                name: "Admin",
                                readOnly: true,
                                searchEnabled: true,
                                showClearButton: true
                            });

                        }
                    }
                }
            });
        });


                 $.get('/Quotation/GetCustomers', function (data) {

                     $('#Clients').dxSelectBox({
                         dataSource: new DevExpress.data.ArrayStore({
                             data: data,
                         }), inputAttr: {
                             name: "ClientId"
                         },
                         displayExpr: 'ClientName',
                         valueExpr: 'ClientId',
                         searchEnabled: true,
                         readOnly: true,
                         showClearButton: true,
                         value: termsdata.ClientId
                     }).dxValidator({
                         validationRules: [{ type: 'required' }]
                     });
                 });
            Quotationgrid(termsdata);

             });


    }


    function getCompAny() {
        var data = JSON.parse(localStorage.getItem('User'));
        var cmpId = data.CompanyId;
        $.get('/Company/GetCompany?cmpID=' + cmpId, function (data) {
            console.log(data, "Company data")
            comp = data;


            $.get('/Company/GetCompanyBank?iD=' + cmpId, function (data) {
                console.log(data, "compBank data")
                compBank = data;



            $('#CompanyId').html(comp.CompanyId);
            $('#CompanyName').html(comp.CompanyName);
            $('#BankCompanyName').html(comp.CompanyName);
            $('#TRN').html(comp.TRN);
            $('#Email').html('Email: ' + comp.Email);
            $('#Address').html(comp.Address);
            $('#Phone').html('Tel: ' + comp.Phone);
            $('#Fax').html('Fax: ' + comp.Fax);
            $('#Website').html('Website: ' + comp.Website);
            $('#Footer').html(comp.Footer);
                 
            $('#BankName').html(compBank.BankName);
            $('#AccountNumber').html(compBank.AccountNumber);
            $('#IBAN').html(compBank.IBAN);
            $('#SwiftCode').html(compBank.SwiftCode);
        });
      });
   }


    function Quotationgrid(termsdata) {
        $.get('/Quotation/GetItemLists', function (data) {
            quotes = data;

            $.get('/Quotation/GetAllItems', function (data) {
                iteMs = data;

            $("#gridContainer").dxDataGrid({
                dataSource: termsdata.Master_Detail_Tables,
                keyExpr: "MasterDetailId",
                showBorders: true,
                columnAutoWidth: true,
                allowColumnResizing: true,
                columnHidingEnabled: true,
                hoverStateEnabled: true,
                editing: {
                    mode: 'batch',
                    allowAdding: false,
                    allowUpdating: false,
                    useIcons: true
                },
                columnsAutoWidth: true,
                showBorders: true,
                filterRow: {
                    visible: true,
                    applyFilter: "auto"
                },
                searchPanel: {
                    visible: true,
                    placeholder: "Search..."
                },
                export: {
                    enabled: true,
                },
                onExporting: function (e) {
                    console.log(e, "e");
                    e.fileName = "Quotation List"
                },
                headerFilter: {
                    visible: true
                },
                onEditorPreparing(e) {
                    if (e.parentType == 'dataRow' && e.dataField == 'MasterId') {
                        e.editorOptions.disabled = (typeof e.row.data.MainItemId !== 'number');
                        }
                    },
                columns: [  
                    {
                        dataField: 'MainItemId',
                        caption: 'Item', 
                        setCellValue(rowData, value) {
                            rowData.MainItemId = value;
                            rowData.MasterId = null;
                        },
                        lookup: {
                            dataSource: iteMs,
                            valueExpr: 'MainItemId',
                            displayExpr: 'Name',
                        },
                    },

                    {
                        dataField: 'MasterId',
                        caption: 'Description',
                        lookup: {
                            dataSource(options) {
                                return {
                                    store: fcx,
                                    filter: options.data ? ['MainItemId', '=', options.data.MainItemId] : null,
                                };
                            },
                            valueExpr: 'MasterId',
                            displayExpr: 'Item',
                        },
                        setCellValue: function (rowData, value) {
                            rowData.MasterId = value;
                            var v = quotes.find(d => d.MasterId == value);
                             rowData.Price = v.Price;
                        },
                    }, 

                    {
                        dataField: "Price",
                        allowEditing: false
                    },
                    {
                        dataField: "Quantity",
                        caption: 'Qty',
                        validationRules: [{ type: 'required' }],
                    },
                    {
                        dataField: "Discount",
                    },
                    {
                        dataField: "Payable",
                        allowEditing: false, 
                        caption: 'Total Amount Payable',
                        type: "fixedPoint",
                        precision: 2,
                        calculateCellValue(rowData) {
                            return rowData.Payable = rowData.Quantity * rowData.Price - rowData.Discount;
                        },
                    }],
                summary: {
                    totalItems: [{
                        column: 'Payable',
                        summaryType: 'sum'
                    }, {
                            column: 'Total',
                            summaryType: 'sum',
                            valueFormat: 'currency'
                        }],
                },
            });

        });
        });
    }



    function checkValidations() {

        if (!$('#customEr').val()) {
            toastr.error('Client is required');
        }
    }
     

</script>

<style>

    .dx-checkbox-icon {
        border-color: #3d83bf !important;
    }

    .dx-checkbox.dx-state-readonly .dx-checkbox-icon {
        border-color: #3d83bf !important;
        background: #dbdbdb !important;
    }

    .mt_25 {
        margin-top: 65px !important;
    }

    .dx-texteditor.dx-editor-outlined {
        border: 1px solid #b5b5b5;
        border-radius: 0px !important;
        height: 47% !important;
    }

    table.table-bordered > tbody > tr > td {
        border: 1px solid black !important;
    }
     
    .blockquote {
        border: 1px solid #9ea3af !important;
    }
</style>

<div class="card">
    <div class="card-header">
        <h1 class="">View Quotation</h1>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-lg-8">

                <div class="row">
                    <div class="col-md-4">
                        <p class="mb-0 font-weight-bold" id="CompanyName"></p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4"> 
                        <address id="Address">  </address>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-3">
                        <p id="Phone"></p>
                    </div>
                    <div class="col-md-3">
                        <p id="Fax"></p>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <p id="Website"></p>
                    </div>
                    <div class="col-md-6">
                        <p id="Email"></p>
                    </div>
                </div>


            </div>


            <div class="col-lg-4">
                <table class="table table-bordered">
                    <tbody>
                        <tr>
                            <td> Reference No: </td>
                            <td id="ReferenceNo" class="font-weight-bold">  </td>
                        </tr>
                        <tr>
                            <td> TRN </td>
                            <td id="TRN" class="font-weight-bold"> </td>
                        </tr>
                        <tr>
                            <td> Quote Date </td>
                            <td class="font-weight-bold" id="DatE">  </td>
                        </tr>

                    </tbody>
                </table>

            </div>
        </div>
        <hr class="sidebar-divider d-none d-md-block">

        <div class="row">
            <div class="col-md-12">
                <form id="cuStoMerForm" class="forms-sample" novalidate="">


                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <label class="col-form-label">Client  <em class="text-danger">*</em></label>
                            <div id="Clients"></div>
                        </div>

                        <div class="form-group col-md-3" id="divDiscount">
                            <label class="col-form-label">Discount Amount </label>
                            <input type="text" name="Discount" id="Discount" class="form-control" readonly>
                        </div>

                        <div class="form-group col-md-3" id="approvalQuotation">
                            <label class="col-form-label">Discount Approval </label>
                            <div id="Status"></div>
                        </div>
                        <div class="form-group col-md-3" id="approvalQuotation">
                            <label class="col-form-label">Quotation Status </label>
                            <div id="QStatus"></div>
                        </div> 
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-3" id="">
                                <label class="col-form-label">Manager Approval </label>
                                <div id="checked"></div>
                            </div>

                            <div class="form-group col-md-3" id="">
                                <label class="col-form-label">Admin Approval </label>
                                <div id="checkedAdmin"></div>
                            </div>

                            <div class="form-group col-md-6" id="ReasonBox">
                                <label class="col-form-label">Reason <em>*</em></label>
                                <textarea name="Text" id="Text" readonly placeholder="" class="form-control" required></textarea>
                            </div>
                        </div> 
                </form>

            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div id="gridContainer"></div>
            </div>
        </div>

        <hr class="sidebar-divider d-none d-md-block">
        <div class="row">

            <div class="col-md-6">
                <blockquote class="blockquote">
                    <h3 class="text-center">QUOTE CURRENCY: AED</h3>
                </blockquote>

                <div class="html-editor" id="html-editor"></div> 
            </div>

            <div class="col-lg-6">
                <table class="table table-bordered">
                    <tbody>
                        <tr>
                            <td> Bank Name: </td>
                            <td id="BankName" class="font-weight-bold">  </td>
                        </tr>
                        <tr>
                            <td> Company Name: </td>
                            <td id="BankCompanyName" class="font-weight-bold"> </td>
                        </tr>
                        <tr>
                            <td> Account Number: </td>
                            <td id="AccountNumber" class="font-weight-bold"> </td>
                        </tr>
                        <tr>
                            <td> IBAN: </td>
                            <td id="IBAN" class="font-weight-bold"> </td>
                        </tr>

                        <tr>
                            <td> SWIFT Code: </td>
                            <td id="SwiftCode" class="font-weight-bold"> </td>
                        </tr>

                    </tbody>
                </table>
            </div>
        </div>


        <hr class="sidebar-divider d-none d-md-block">
   
    </div>
</div>
 